{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manu\\\\Documents\\\\PersonalProjects\\\\test\\\\reactulator\\\\ui\\\\src\\\\components\\\\RowComponent\\\\RowComponent.tsx\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst action = {\n  backgroundColor: \"purple\",\n  height: \"100px\"\n};\nconst value = {\n  backgroundColor: \"grey\"\n};\nconst colStyle = {\n  height: \"10vh\",\n  width: \"25%\"\n};\nconst doubleColStyle = {\n  height: \"10vh\",\n  width: \"50%\"\n};\n// const rowStyle = {\n//   border: '1px solid rgba(0, 0, 0, 50)',\n//   display:\"flex\",\n//   width: \"100%\",\n//   height: \"10%\"\n// };\n\nconst rowStyle = {\n  display: \"flex\",\n  padding: \"1%\",\n  width: \"100%\",\n  height: \"100%\"\n};\nconst RowComponent = ({\n  array\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      style: rowStyle,\n      children: array.map(({\n        value,\n        size,\n        textValue,\n        type,\n        onClick,\n        isDoubleSize,\n        isRedColored,\n        isColored\n      }) => /*#__PURE__*/_jsxDEV(Col, {\n        sm: true,\n        style: isDoubleSize ? doubleColStyle : colStyle,\n        children: /*#__PURE__*/_jsxDEV(CustomButton, {\n          value: value,\n          onClick: onClick,\n          textValue: textValue,\n          type: type,\n          pos: 0,\n          size: size,\n          isDoubleSize: isDoubleSize,\n          isRedColored: isRedColored,\n          isColored: isColored\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = RowComponent;\nexport default RowComponent;\nvar _c;\n$RefreshReg$(_c, \"RowComponent\");","map":{"version":3,"names":["Col","Row","CustomButton","jsxDEV","_jsxDEV","Fragment","_Fragment","action","backgroundColor","height","value","colStyle","width","doubleColStyle","rowStyle","display","padding","RowComponent","array","children","style","map","size","textValue","type","onClick","isDoubleSize","isRedColored","isColored","sm","pos","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Manu/Documents/PersonalProjects/test/reactulator/ui/src/components/RowComponent/RowComponent.tsx"],"sourcesContent":["import Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { CustomArrayProps, CustomButtonProps } from \"../../util/types\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\n\r\nconst action = {\r\n  backgroundColor: \"purple\",\r\n  height: \"100px\",\r\n};\r\nconst value = {\r\n  backgroundColor: \"grey\",\r\n};\r\n\r\nconst colStyle = {\r\n  height: \"10vh\",\r\n  width: \"25%\",\r\n};\r\nconst doubleColStyle = {\r\n  height: \"10vh\",\r\n  width: \"50%\",\r\n};\r\n// const rowStyle = {\r\n//   border: '1px solid rgba(0, 0, 0, 50)',\r\n//   display:\"flex\",\r\n//   width: \"100%\",\r\n//   height: \"10%\"\r\n// };\r\n\r\n\r\nconst rowStyle = {\r\n  display: \"flex\",\r\n  padding: \"1%\",\r\n  width: \"100%\",\r\n  height: \"100%\"\r\n};\r\n\r\nconst RowComponent = ({ array }: CustomArrayProps) => {\r\n  return (\r\n    <>\r\n      <Row style={rowStyle}>\r\n        {array.map(({ value, size, textValue, type, onClick, isDoubleSize, isRedColored, isColored }: CustomButtonProps) => (\r\n          <Col sm key={value} style={isDoubleSize ? doubleColStyle : colStyle}>\r\n            <CustomButton key={value} value={value} onClick={onClick} textValue={textValue}\r\n              type={type} pos={0} size={size} isDoubleSize={isDoubleSize}\r\n              isRedColored={isRedColored} isColored={isColored}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RowComponent;\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AAErC,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,MAAM,GAAG;EACbC,eAAe,EAAE,QAAQ;EACzBC,MAAM,EAAE;AACV,CAAC;AACD,MAAMC,KAAK,GAAG;EACZF,eAAe,EAAE;AACnB,CAAC;AAED,MAAMG,QAAQ,GAAG;EACfF,MAAM,EAAE,MAAM;EACdG,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,cAAc,GAAG;EACrBJ,MAAM,EAAE,MAAM;EACdG,KAAK,EAAE;AACT,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAME,QAAQ,GAAG;EACfC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,IAAI;EACbJ,KAAK,EAAE,MAAM;EACbH,MAAM,EAAE;AACV,CAAC;AAED,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAwB,CAAC,KAAK;EACpD,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA,CAACH,GAAG;MAACmB,KAAK,EAAEN,QAAS;MAAAK,QAAA,EAClBD,KAAK,CAACG,GAAG,CAAC,CAAC;QAAEX,KAAK;QAAEY,IAAI;QAAEC,SAAS;QAAEC,IAAI;QAAEC,OAAO;QAAEC,YAAY;QAAEC,YAAY;QAAEC;MAA6B,CAAC,kBAC7GxB,OAAA,CAACJ,GAAG;QAAC6B,EAAE;QAAaT,KAAK,EAAEM,YAAY,GAAGb,cAAc,GAAGF,QAAS;QAAAQ,QAAA,eAClEf,OAAA,CAACF,YAAY;UAAaQ,KAAK,EAAEA,KAAM;UAACe,OAAO,EAAEA,OAAQ;UAACF,SAAS,EAAEA,SAAU;UAC7EC,IAAI,EAAEA,IAAK;UAACM,GAAG,EAAE,CAAE;UAACR,IAAI,EAAEA,IAAK;UAACI,YAAY,EAAEA,YAAa;UAC3DC,YAAY,EAAEA,YAAa;UAACC,SAAS,EAAEA;QAAU,GAFhClB,KAAK;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGvB;MAAC,GAJSxB,KAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACC,EAAA,GAfIlB,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}